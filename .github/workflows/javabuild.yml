name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
    tags: ["v*.*.*"]

  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
    # environment: development 
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    
    - name: Cache the Maven packages to speed up build
      uses: actions/cache@v1
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2      

    - name: Build with Maven
      run: mvn -B package --file pom.xml -DskipTests=true

    - name: Testing with Maven
      run: mvn test

    - name: Display test result
      run: | 
        ls -al ./target/

  docker:
    runs-on: ubuntu-latest
    needs: [build]
    env:
      ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
    steps:
      - uses: actions/checkout@v4
        name: Checkout Repository
      - name: Log into registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.ACR_ENDPOINT }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      - name: Build & Push
        uses: docker/build-push-action@v2
        with:
          push: false #change to true later on
          tags: ${{ secrets.ACR_ENDPOINT }}/numeric_counter:${{ github.sha }}

      - name: Docker Run
        run: |
            docker images
            docker run --name numeric-counter -d \
              -p 8080:8080 \
              ${{ secrets.ACR_ENDPOINT }}/numeric_counter:${{ github.sha }} \
            curl 127.0.0.1:8080

  kubernetes-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - uses: azure/aks-set-context@v3
        with:
          resource-group: 'rg-uks-gen-dev001'
          cluster-name: 'aks-uks-gen'

      - name: azure/aks-set-context@v3
        run: |
          kubectl get deploy

    # - uses: actions/upload-artifact@v1
    #   with:
    #     name: Package
    #     path: coverage.xml
    
  